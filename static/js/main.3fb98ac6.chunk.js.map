{"version":3,"sources":["Containers/Modules/PlayerInfoModule/playerInfoModule.module.css","Containers/Scoreboard/Scoreboard.module.css","Containers/Gameboard/Gameboard.module.css","Containers/Modules/WinnerModule/WinnerModule.module.css","Reusables/Backdrop/backdrop.module.css","Containers/Gameboard/Tile/Tile.module.css","Pictures/capital_x.png","Pictures/capital_o.png","Reusables/Backdrop/backdrop.js","Containers/Modules/PlayerInfoModule/PlayerInfoModule.js","Containers/Scoreboard/Scoreboard.js","Containers/Gameboard/Tile/Tile.js","Containers/Gameboard/Gameboard.js","Containers/Modules/WinnerModule/WinnerModule.js","Containers/TicTacToe/TicTacToe.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backdrop","className","classes","Backdrop","PlayerInfoModule","props","useState","playerOneTitle","setplayerOneTitle","playerTwoTitle","setPlayerTwoTitle","playerOneColor","setplayerOneColor","playerTwoColor","setplayerTwoColor","Module","Player","id","type","placeholder","maxLength","onInput","event","target","value","Select","onChange","Red","Orange","Yellow","Green","Blue","Purple","Button","onClick","playButton","Scoreboard","color","turn","SignOne","style","playerOneScore","SignDivider","playerOneName","playerTwoName","SignTwo","playerTwoScore","WhoseTurn","whoseTurn","Tile","clicked","backgroundColor","claim","Gameboard","GameboardOuter","ImageOne","src","require","claimTile","tileOne","tileTwo","tileThree","tileFour","tileFive","tileSix","tileSeven","tileEight","tileNine","ImageTwo","WinnerModule","winningColor","border","Title","winner","wins","playAgainClicked","TicTacToe","state","ticTacToeBoard","editing","winnerScreen","gameFinish","changePlayerOneHandler","input","length","setState","changePlayerTwoHandler","updateWinnerHandler","console","log","prevState","playButtonHandler","playerOneInput","playerTwoInput","claimTileHandler","tileNumber","setTimeout","playAgainHandler","playerInfoModule","this","changePlayerOne","winnerModule","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3fb98ac6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Module\":\"playerInfoModule_Module__3Vrql\",\"Player\":\"playerInfoModule_Player__FER9N\",\"Button\":\"playerInfoModule_Button__12GEf\",\"Select\":\"playerInfoModule_Select__3tC7O\",\"Red\":\"playerInfoModule_Red__kT1LF\",\"Orange\":\"playerInfoModule_Orange__36drA\",\"Yellow\":\"playerInfoModule_Yellow__BKESh\",\"Green\":\"playerInfoModule_Green__3u2nj\",\"Blue\":\"playerInfoModule_Blue__1rooo\",\"Purple\":\"playerInfoModule_Purple__2JBCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Scoreboard\":\"Scoreboard_Scoreboard__2eDu4\",\"SignOne\":\"Scoreboard_SignOne__1muie\",\"SignDivider\":\"Scoreboard_SignDivider__2WooO\",\"SignTwo\":\"Scoreboard_SignTwo__2bFKh\",\"WhoseTurn\":\"Scoreboard_WhoseTurn__3f4Dl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameboardOuter\":\"Gameboard_GameboardOuter__2538M\",\"ImageOne\":\"Gameboard_ImageOne___TaOV\",\"ImageTwo\":\"Gameboard_ImageTwo__2MulT\",\"Gameboard\":\"Gameboard_Gameboard___FNvw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Module\":\"WinnerModule_Module__mrzMT\",\"Title\":\"WinnerModule_Title__3Dun3\",\"Button\":\"WinnerModule_Button__WTPhX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"backdrop_Backdrop__3ZjEc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tile\":\"Tile_Tile__1q6ms\"};","module.exports = __webpack_public_path__ + \"static/media/capital_x.c53f5950.png\";","module.exports = __webpack_public_path__ + \"static/media/capital_o.78e6d8c3.png\";","import React from 'react';\r\nimport classes from './backdrop.module.css'\r\n\r\nconst backdrop = () => {\r\n    return (\r\n        <div className={classes.Backdrop}></div>\r\n    )\r\n\r\n}\r\n\r\nexport default backdrop","import classes from './playerInfoModule.module.css'\r\nimport Backdrop from '../../../Reusables/Backdrop/backdrop'\r\nimport React, { useState, Fragment } from 'react';\r\n\r\n\r\nconst PlayerInfoModule = (props) => {\r\n\r\n    const [playerOneTitle, setplayerOneTitle] = useState('')\r\n    const [playerTwoTitle, setPlayerTwoTitle] = useState('')\r\n\r\n    const [playerOneColor, setplayerOneColor] = useState('red')\r\n    const [playerTwoColor, setplayerTwoColor] = useState('blue')\r\n\r\n    return (\r\n        <Fragment>\r\n            <Backdrop />\r\n            <div className={classes.Module} >\r\n                <div className={classes.Player}>\r\n                    <label>X is Player One</label>\r\n                    <input  id='playerOne' type='text' placeholder='Player One' maxLength='15'\r\n                        onInput={ event => setplayerOneTitle(event.target.value)} value={playerOneTitle}/>    \r\n                </div>\r\n                <label>Choose a color:</label>\r\n                    <select className={classes.Select} onChange={ event => setplayerOneColor(event.target.value)} value={playerOneColor}>\r\n                        <option className={classes.Red} value=\"red\">Red</option>\r\n                        <option className={classes.Orange} value=\"orange\">Orange</option>\r\n                        <option className={classes.Yellow} value=\"yellow\">Yellow</option>\r\n                        <option className={classes.Green} value=\"green\">Green</option>\r\n                        <option className={classes.Blue} value=\"blue\">Blue</option>\r\n                        <option className={classes.Purple} value=\"purple\">Purple</option>\r\n                    </select>\r\n                <div className={classes.Player} >\r\n                    <label>O is Player Two</label>\r\n                    <input  id='playerTwo' type='text' placeholder='Player Two' maxLength='15'\r\n                        onInput={ event => setPlayerTwoTitle(event.target.value)} value={playerTwoTitle}/>\r\n                </div>\r\n                <label>Choose a color:</label>\r\n                    <select className={classes.Select} onChange={ event => {setplayerTwoColor(event.target.value)}} value={playerTwoColor}>\r\n                        <option className={classes.Red} value=\"red\">Red</option>\r\n                        <option className={classes.Orange} value=\"orange\">Orange</option>\r\n                        <option className={classes.Yellow} value=\"yellow\">Yellow</option>\r\n                        <option className={classes.Green} value=\"green\">Green</option>\r\n                        <option className={classes.Blue} value=\"blue\">Blue</option>\r\n                        <option className={classes.Purple} value=\"purple\">Purple</option>\r\n                    </select>\r\n                \r\n                <button className={classes.Button} onClick={() => {\r\n                    \r\n                    props.playButton(playerOneTitle, playerTwoTitle, playerOneColor, playerTwoColor)}}>Play</button>\r\n            </div>\r\n        </Fragment>\r\n           \r\n\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default PlayerInfoModule","import React from 'react';\r\nimport classes from './Scoreboard.module.css'\r\n\r\nconst Scoreboard = (props) => {\r\n    \r\n    let color = ''\r\n    if(props.turn) {\r\n        color = props.playerOneColor\r\n    } else {\r\n        color = props.playerTwoColor\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.Scoreboard}>\r\n            <p className={classes.SignOne}\r\n            style={{\r\n                color: props.playerOneColor\r\n            }}>\r\n                {props.playerOneScore} </p>\r\n            <p className={classes.SignDivider}>{props.playerOneName} - {props.playerTwoName}</p>\r\n            <p className={classes.SignTwo}\r\n            style={{\r\n                color: props.playerTwoColor\r\n            }}>\r\n                {props.playerTwoScore}</p>\r\n            <p className={classes.WhoseTurn}  \r\n            style={{\r\n                color: color\r\n            }}>{props.whoseTurn}'s turn</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scoreboard","import React from 'react';\r\nimport classes from './Tile.module.css';\r\n\r\nconst Tile = (props) => {\r\n    return (\r\n        <div className={classes.Tile} onClick={props.clicked} style={{\r\n            backgroundColor: props.color\r\n        }}>{props.claim}</div>\r\n    )\r\n}\r\n\r\nexport default Tile","import React, { Fragment } from 'react';\r\nimport classes from './Gameboard.module.css'\r\nimport Tile from './Tile/Tile'\r\n\r\n\r\nconst Gameboard = (props) => {\r\n    return (\r\n       <Fragment>\r\n           \r\n           <div className={classes.GameboardOuter}>\r\n           <img className={classes.ImageOne} src={require('../../Pictures/capital_x.png')}></img>\r\n                <div className={classes.Gameboard}>\r\n                        <Tile clicked={() => { props.clicked(0) }} claim={props.claimTile[0]} color={props.tileOne}/>\r\n                        <Tile clicked={() => { props.clicked(1) }} claim={props.claimTile[1]} color={props.tileTwo}/>\r\n                        <Tile clicked={() => { props.clicked(2) }} claim={props.claimTile[2]} color={props.tileThree}/>\r\n                        <Tile clicked={() => { props.clicked(3) }} claim={props.claimTile[3]} color={props.tileFour}/>\r\n                        <Tile clicked={() => { props.clicked(4) }} claim={props.claimTile[4]} color={props.tileFive}/>\r\n                        <Tile clicked={() => { props.clicked(5) }} claim={props.claimTile[5]} color={props.tileSix}/>\r\n                        <Tile clicked={() => { props.clicked(6) }} claim={props.claimTile[6]} color={props.tileSeven}/>\r\n                        <Tile clicked={() => { props.clicked(7) }} claim={props.claimTile[7]} color={props.tileEight}/>\r\n                        <Tile clicked={() => { props.clicked(8) }} claim={props.claimTile[8]} color={props.tileNine}/>\r\n                </div>\r\n                <img className={classes.ImageTwo} src={require('../../Pictures/capital_o.png')}></img>    \r\n           </div>\r\n           \r\n           \r\n       </Fragment>\r\n    )\r\n}\r\n\r\nexport default Gameboard","import classes from './WinnerModule.module.css'\r\nimport Backdrop from '../../../Reusables/Backdrop/backdrop'\r\nimport React, {  Fragment } from 'react';\r\n\r\n\r\nconst WinnerModule = (props) => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <Backdrop />\r\n            <div className={classes.Module} \r\n            style={{\r\n                backgroundColor: props.winningColor,\r\n                border: '1px solid ' + props.winningColor\r\n            }} >\r\n                <p className={classes.Title}>{props.winner}{props.wins}</p>\r\n                <button \r\n                className={classes.Button} \r\n                onClick={props.playAgainClicked}\r\n                \r\n                >New Game?</button>\r\n            </div>\r\n        </Fragment>\r\n           \r\n\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default WinnerModule","import React, { Fragment, Component} from 'react';\r\nimport PlayerInfoModule from '../Modules/PlayerInfoModule/PlayerInfoModule'\r\nimport Scoreboard from '../Scoreboard/Scoreboard'\r\nimport Gameboard from '../Gameboard/Gameboard'\r\nimport WinnerModule from '../Modules/WinnerModule/WinnerModule'\r\n\r\n\r\n\r\n\r\nclass TicTacToe extends Component { \r\n\r\n    state = {\r\n        playerOneScore: 0,\r\n        playerTwoScore: 0,\r\n        playerOneName: 'Player One',\r\n        playerTwoName: 'Player Two',\r\n        playerOneColor: 'red',\r\n        playerTwoColor: 'blue',\r\n        ticTacToeBoard: ['','','','','','','','',''],\r\n        editing: true,\r\n        turn: true,\r\n        winner: 'hey',\r\n        winnerScreen: false,\r\n        gameFinish: 0\r\n    };\r\n\r\n    \r\n\r\n    changePlayerOneHandler = (input) => {\r\n        if(input.length < 1){\r\n            input = 'Player One';\r\n        }\r\n            this.setState( () => {\r\n                return {\r\n                    playerOneName: input\r\n                }\r\n            })\r\n        \r\n    }\r\n    changePlayerTwoHandler = (input) => {\r\n        if(input.length < 1){\r\n            input = 'Player Two';\r\n        }\r\n            this.setState( () => {\r\n                return {\r\n                    playerTwoName: input\r\n                }\r\n            })\r\n    }\r\n\r\n    updateWinnerHandler = () => {\r\n        console.log(this.state.playerTwoColor)\r\n        this.setState( (prevState) => {\r\n            return {\r\n                gameFinish: prevState.gameFinish + 1\r\n            }\r\n        })\r\n\r\n            if( this.state.ticTacToeBoard[0] === 'X' && this.state.ticTacToeBoard[1] === 'X' && this.state.ticTacToeBoard[2] === 'X')\r\n             { this.setState( (prevState) => { return {winner: prevState.playerOneName, winnerScreen: true, playerOneScore: prevState.playerOneScore + 1, gameFinish: 0}}) }\r\n             if( this.state.ticTacToeBoard[3] === 'X' && this.state.ticTacToeBoard[4] === 'X' && this.state.ticTacToeBoard[5] === 'X')\r\n              { this.setState( (prevState) => { return {winner: prevState.playerOneName, winnerScreen: true, playerOneScore: prevState.playerOneScore + 1, gameFinish: 0}}) }\r\n             if( this.state.ticTacToeBoard[6] === 'X' && this.state.ticTacToeBoard[7] === 'X' && this.state.ticTacToeBoard[8] === 'X')\r\n              { this.setState( (prevState) => { return {winner: prevState.playerOneName, winnerScreen: true, playerOneScore: prevState.playerOneScore + 1, gameFinish: 0}}) }\r\n             if( this.state.ticTacToeBoard[0] === 'X' && this.state.ticTacToeBoard[3] === 'X' && this.state.ticTacToeBoard[6] === 'X')\r\n              { this.setState( (prevState) => { return {winner: prevState.playerOneName, winnerScreen: true, playerOneScore: prevState.playerOneScore + 1, gameFinish: 0}}) }\r\n             if( this.state.ticTacToeBoard[1] === 'X' && this.state.ticTacToeBoard[4] === 'X' && this.state.ticTacToeBoard[7] === 'X')\r\n              { this.setState( (prevState) => { return {winner: prevState.playerOneName, winnerScreen: true, playerOneScore: prevState.playerOneScore + 1, gameFinish: 0}}) }\r\n             if( this.state.ticTacToeBoard[2] === 'X' && this.state.ticTacToeBoard[5] === 'X' && this.state.ticTacToeBoard[8] === 'X')\r\n              { this.setState( (prevState) => { return {winner: prevState.playerOneName, winnerScreen: true, playerOneScore: prevState.playerOneScore + 1, gameFinish: 0}}) }\r\n             if( this.state.ticTacToeBoard[0] === 'X' && this.state.ticTacToeBoard[4] === 'X' && this.state.ticTacToeBoard[8] === 'X')\r\n              { this.setState( (prevState) => { return {winner: prevState.playerOneName, winnerScreen: true, playerOneScore: prevState.playerOneScore + 1, gameFinish: 0}}) }\r\n             if( this.state.ticTacToeBoard[2] === 'X' && this.state.ticTacToeBoard[4] === 'X' && this.state.ticTacToeBoard[6] === 'X')\r\n              { this.setState( (prevState) => { return {winner: prevState.playerOneName, winnerScreen: true, playerOneScore: prevState.playerOneScore + 1, gameFinish: 0}}) }\r\n             \r\n\r\n             if( this.state.ticTacToeBoard[0] === 'O' && this.state.ticTacToeBoard[1] === 'O' && this.state.ticTacToeBoard[2] === 'O')\r\n              { this.setState( (prevState) => { return {winner: prevState.playerTwoName, winnerScreen: true, playerTwoScore: prevState.playerTwoScore + 1, gameFinish: 0}}) }\r\n             if( this.state.ticTacToeBoard[3] === 'O' && this.state.ticTacToeBoard[4] === 'O' && this.state.ticTacToeBoard[5] === 'O')\r\n              { this.setState( (prevState) => { return {winner: prevState.playerTwoName, winnerScreen: true, playerTwoScore: prevState.playerTwoScore + 1, gameFinish: 0}}) }\r\n             if( this.state.ticTacToeBoard[6] === 'O' && this.state.ticTacToeBoard[7] === 'O' && this.state.ticTacToeBoard[8] === 'O')\r\n              { this.setState( (prevState) => { return {winner: prevState.playerTwoName, winnerScreen: true, playerTwoScore: prevState.playerTwoScore + 1, gameFinish: 0}}) }\r\n             if( this.state.ticTacToeBoard[0] === 'O' && this.state.ticTacToeBoard[3] === 'O' && this.state.ticTacToeBoard[6] === 'O')\r\n              { this.setState( (prevState) => { return {winner: prevState.playerTwoName, winnerScreen: true, playerTwoScore: prevState.playerTwoScore + 1, gameFinish: 0}}) }\r\n             if( this.state.ticTacToeBoard[1] === 'O' && this.state.ticTacToeBoard[4] === 'O' && this.state.ticTacToeBoard[7] === 'O')\r\n              { this.setState( (prevState) => { return {winner: prevState.playerTwoName, winnerScreen: true, playerTwoScore: prevState.playerTwoScore + 1, gameFinish: 0}}) }\r\n             if( this.state.ticTacToeBoard[2] === 'O' && this.state.ticTacToeBoard[5] === 'O' && this.state.ticTacToeBoard[8] === 'O')\r\n              { this.setState( (prevState) => { return {winner: prevState.playerTwoName, winnerScreen: true, playerTwoScore: prevState.playerTwoScore + 1, gameFinish: 0}}) }\r\n             if( this.state.ticTacToeBoard[0] === 'O' && this.state.ticTacToeBoard[4] === 'O' && this.state.ticTacToeBoard[8] === 'O')\r\n              { this.setState( (prevState) => { return {winner: prevState.playerTwoName, winnerScreen: true, playerTwoScore: prevState.playerTwoScore + 1, gameFinish: 0}}) }\r\n             if( this.state.ticTacToeBoard[2] === 'O' && this.state.ticTacToeBoard[4] === 'O' && this.state.ticTacToeBoard[6] === 'O')\r\n              { this.setState( (prevState) => { return {winner: prevState.playerTwoName, winnerScreen: true, playerTwoScore: prevState.playerTwoScore + 1, gameFinish: 0}}) }\r\n\r\n              \r\n            \r\n            if(this.state.gameFinish === 9) {\r\n                { this.setState( () => { return {winner: \"DRAW\", winnerScreen: true, gameFinish: 0}}) }\r\n            }\r\n    }\r\n\r\n    playButtonHandler = (playerOneInput, playerTwoInput, playerOneColor, playerTwoColor) => {\r\n        if(playerOneColor === playerTwoColor) {\r\n            switch (playerOneColor) {\r\n                case 'red': \r\n                    playerTwoColor = 'orange'\r\n                break;\r\n                case 'orange': \r\n                    playerTwoColor = 'yellow'\r\n                break;\r\n                case 'yellow': \r\n                    playerTwoColor = 'green'\r\n                break;\r\n                case 'green': \r\n                    playerTwoColor = 'blue'\r\n                break;\r\n                case 'blue': \r\n                    playerTwoColor = 'purple'\r\n                break;\r\n                case 'purple': \r\n                    playerTwoColor = 'red'\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.changePlayerOneHandler(playerOneInput)\r\n        this.changePlayerTwoHandler(playerTwoInput)\r\n        this.setState( () => {\r\n            return {\r\n                playerOneColor: playerOneColor,\r\n                playerTwoColor: playerTwoColor,\r\n                editing: false\r\n            }\r\n        } )\r\n    }\r\n\r\n    claimTileHandler = (tileNumber) => {\r\n        if(this.state.ticTacToeBoard[tileNumber].length > 0) {\r\n            return null\r\n        } else {\r\n            if(this.state.turn) {\r\n                this.setState( () => {\r\n                    let ticTacToeBoard = [...this.state.ticTacToeBoard] \r\n                    ticTacToeBoard[tileNumber] = 'X' \r\n                    return {\r\n                        ticTacToeBoard: ticTacToeBoard,\r\n                        turn: false \r\n                    }\r\n                })\r\n            } else {\r\n                this.setState( () => {\r\n                    let ticTacToeBoard = [...this.state.ticTacToeBoard] \r\n                    ticTacToeBoard[tileNumber] = 'O' \r\n                    return {\r\n                        ticTacToeBoard: ticTacToeBoard,\r\n                        turn: true\r\n                    }\r\n                })\r\n            }\r\n        }  \r\n        setTimeout(this.updateWinnerHandler, 1)\r\n    }\r\n    playAgainHandler = () => {\r\n        this.setState(() => {\r\n            return {\r\n                winnerScreen: false,\r\n                ticTacToeBoard: ['','','','','','','','','']\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render () {\r\n        let playerInfoModule = <PlayerInfoModule \r\n        playButton = {this.playButtonHandler}\r\n        changePlayerOne={this.changePlayerOneHandler}/>; \r\n        if(!this.state.editing){\r\n            playerInfoModule = null\r\n        }\r\n        \r\n        let winningColor = '';\r\n        if(this.state.winner === this.state.playerOneName){\r\n            winningColor = this.state.playerOneColor\r\n        } else if (this.state.winner === this.state.playerTwoName) {\r\n            winningColor =this.state.playerTwoColor\r\n        } else {\r\n            winningColor = 'grey'\r\n        }\r\n        let wins = ' wins!'\r\n\r\n        let winnerModule = <WinnerModule \r\n        winner={this.state.winner} \r\n        wins={this.state.winner === 'DRAW' ? null : wins}\r\n        playAgainClicked={this.playAgainHandler} \r\n        winningColor={winningColor}/>\r\n\r\n        if(!this.state.winnerScreen) {\r\n            winnerModule = null\r\n        }\r\n\r\n\r\n        let tileOne, tileTwo, tileThree, tileFour, tileFive, tileSix, tileSeven, tileEight, tileNine\r\n\r\n        if(this.state.ticTacToeBoard[0] === 'X') {\r\n            tileOne = this.state.playerOneColor\r\n        } else if (this.state.ticTacToeBoard[0] === 'O') {\r\n            tileOne = this.state.playerTwoColor\r\n        } else {\r\n            tileOne = 'white'\r\n        }\r\n        if(this.state.ticTacToeBoard[1] === 'X') {\r\n            tileTwo = this.state.playerOneColor\r\n        } else if (this.state.ticTacToeBoard[1] === 'O') {\r\n            tileTwo = this.state.playerTwoColor\r\n        } else {\r\n            tileTwo = 'white'\r\n        }\r\n        if(this.state.ticTacToeBoard[2] === 'X') {\r\n            tileThree = this.state.playerOneColor\r\n        } else if (this.state.ticTacToeBoard[2] === 'O') {\r\n            tileThree = this.state.playerTwoColor\r\n        } else {\r\n            tileThree = 'white'\r\n        }\r\n        if(this.state.ticTacToeBoard[3] === 'X') {\r\n            tileFour = this.state.playerOneColor\r\n        } else if (this.state.ticTacToeBoard[3] === 'O') {\r\n            tileFour = this.state.playerTwoColor\r\n        } else {\r\n            tileFour = 'white'\r\n        }\r\n        if(this.state.ticTacToeBoard[4] === 'X') {\r\n            tileFive = this.state.playerOneColor\r\n        } else if (this.state.ticTacToeBoard[4] === 'O') {\r\n            tileFive = this.state.playerTwoColor\r\n        } else {\r\n            tileFive = 'white'\r\n        }\r\n        if(this.state.ticTacToeBoard[5] === 'X') {\r\n            tileSix = this.state.playerOneColor\r\n        } else if (this.state.ticTacToeBoard[5] === 'O') {\r\n            tileSix = this.state.playerTwoColor\r\n        } else {\r\n            tileSix = 'white'\r\n        }\r\n        if(this.state.ticTacToeBoard[6] === 'X') {\r\n            tileSeven = this.state.playerOneColor\r\n        } else if (this.state.ticTacToeBoard[6] === 'O') {\r\n            tileSeven = this.state.playerTwoColor\r\n        } else {\r\n            tileSeven = 'white'\r\n        }\r\n        if(this.state.ticTacToeBoard[7] === 'X') {\r\n            tileEight = this.state.playerOneColor\r\n        } else if (this.state.ticTacToeBoard[7] === 'O') {\r\n            tileEight = this.state.playerTwoColor\r\n        } else {\r\n            tileEight = 'white'\r\n        }\r\n        if(this.state.ticTacToeBoard[8] === 'X') {\r\n            tileNine = this.state.playerOneColor\r\n        } else if (this.state.ticTacToeBoard[8] === 'O') {\r\n            tileNine = this.state.playerTwoColor\r\n        } else {\r\n            tileNine = 'white'\r\n        }\r\n\r\n\r\n        return (\r\n            <Fragment>\r\n                { playerInfoModule }\r\n                { winnerModule }\r\n                \r\n                <Scoreboard \r\n                playerOneColor={this.state.playerOneColor}\r\n                playerTwoColor={this.state.playerTwoColor}\r\n                playerOneScore={this.state.playerOneScore} \r\n                playerTwoScore={this.state.playerTwoScore}\r\n                playerOneName={this.state.playerOneName}\r\n                playerTwoName={this.state.playerTwoName}\r\n                turn={this.state.turn}\r\n                whoseTurn={this.state.turn ? this.state.playerOneName : this.state.playerTwoName}/>\r\n\r\n                <Gameboard \r\n                clicked={this.claimTileHandler}\r\n                claimTile={this.state.ticTacToeBoard}\r\n                tileOne={tileOne}\r\n                tileTwo={tileTwo}\r\n                tileThree={tileThree}\r\n                tileFour={tileFour}\r\n                tileFive={tileFive}\r\n                tileSix={tileSix}\r\n                tileSeven={tileSeven}\r\n                tileEight={tileEight}\r\n                tileNine={tileNine}\r\n                />   \r\n                \r\n            </Fragment>\r\n            \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default TicTacToe","import React from 'react'\nimport './App.css';\nimport TicTacToe from './Containers/TicTacToe/TicTacToe'\nfunction App() {\n    return (\n        <TicTacToe />\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}